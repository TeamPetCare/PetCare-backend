# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

#name: Build and deploy JAR app to Azure Web App - petcareBackend
#
#on:
#  push:
#    branches:
#      - main
#  workflow_dispatch:
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up Java Version
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '17'
#
#
#      - name: Build with Maven
#        run: mvn clean install
#
#      - name: Upload artifact for deployment job
#        uses: actions/upload-artifact@v3
#        with:
#          name: java-app
#          path: '${{ github.workspace }}/target/*.jar'
#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#    environment:
#      name: 'Production'
#      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
#
#    steps:
#      - name: Download artifact from build job
#        uses: actions/download-artifact@v3
#        with:
#          name: java-app
#
#      - name: Deploy to Azure Web App
#        id: deploy-to-webapp
#        uses: azure/webapps-deploy@v2
#        with:
#          app-name: 'petcareBackend'
#          slot-name: 'Production'
#          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_AFE80BAB2CB141608AE848542B456B21 }}
#          package: '*.jar'


name: Deploy PetCare Aplication

on:
  push:
      branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build project
        run: mvn clean install #-DskipTests

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: sudo docker build -t ${{ secrets.DOCKER_USERNAME }}/petcare-rest-application .

      - name: Push Image Docker
        run: docker push ${{ secrets.DOCKER_USERNAME }}/petcare-rest-application

  deploy:
      needs: build
      runs-on: self-hosted
      steps:
        - name: Pull image from Dockerhub
          run: sudo docker pull ${{ secrets.DOCKER_USERNAME }}/petcare-rest-application:latest

        - name: Parar todos containers
          run: sudo docker stop $(sudo docker ps -aq)

        - name: Remover Docker Container
          run: sudo docker rm $(sudo docker ps -aq)

        - name: Remover todos os usos da porta 80
          run: sudo lsof -t -i :80 | xargs sudo kill -9

        - name: Run Docker Container
          run: sudo docker run -d --restart unless-stopped -p 80:80 -e DATABASE_USER='${{secrets.DATABASE_USER}}' -e DATABASE_PASSWORD='${{secrets.DATABASE_PASSWORD}}' -e DATABASE_SOURCE='${{secrets.DATABASE_URL}}' -e PASSWORD_KEY='${{secrets.PASSWORD_KEY}}' -e MERCADO_PAGO_KEY='${{secrets.MERCADO_PAGO_KEY}}' -e BLOB_CONNECTION='${{secrets.BLOB_CONNECTION}}' --name petcare-rest-application ${{ secrets.DOCKER_USERNAME }}/petcare-rest-application
